import pandas as pd
import tkinter as tk
from tkinter import ttk
import webbrowser

# Load your Excel file into a DataFrame
data = pd.read_excel('your_excel_file.xlsx')

# Create a dictionary to store suggestions for each field
suggestions = {
    'Department': data['Department'].unique(),
    'Sub-Department': [],
    'Manager': [],
    'Keyword': []
}

# Initialize current step and selections
current_step = 0
selections = {}

# Function to handle the "Submit" button
def submit():
    global current_step
    
    if current_step == 0:
        department = department_var.get()
        selections['Department'] = department
        
        # Filter data for sub-department suggestions
        sub_department_suggestions = data[data['Department'] == department]['Sub-Department'].unique()
        suggestions['Sub-Department'] = sub_department_suggestions
        sub_department_var.set('')  # Clear the current sub-department selection
        sub_department_entry['values'] = sub_department_suggestions
        current_step += 1
        update_step_label()
    elif current_step == 1:
        sub_department = sub_department_var.get()
        selections['Sub-Department'] = sub_department
        
        # Filter data for manager suggestions
        manager_suggestions = data[(data['Department'] == selections['Department']) &
                                   (data['Sub-Department'] == sub_department)]['Manager'].unique()
        suggestions['Manager'] = manager_suggestions
        manager_var.set('')  # Clear the current manager selection
        manager_entry['values'] = manager_suggestions
        current_step += 1
        update_step_label()
    elif current_step == 2:
        manager = manager_var.get()
        selections['Manager'] = manager
        
        # Filter data for keyword suggestions
        keyword_suggestions = data[(data['Department'] == selections['Department']) &
                                   (data['Sub-Department'] == selections['Sub-Department']) &
                                   (data['Manager'] == manager)]['Keyword'].unique()
        suggestions['Keyword'] = keyword_suggestions
        keyword_var.set('')  # Clear the current keyword entry
        keyword_entry['values'] = keyword_suggestions
        current_step += 1
        update_step_label()
    elif current_step == 3:
        keyword = keyword_var.get()
        selections['Keyword'] = keyword
        
        # Filter data based on all selections
        filtered_data = data[(data['Department'] == selections['Department']) &
                             (data['Sub-Department'] == selections['Sub-Department']) &
                             (data['Manager'] == selections['Manager']) &
                             (data['Keyword'] == keyword)]
        
        # Check if a matching record was found
        if not filtered_data.empty:
            # Get the URL from the first matching record (you can adjust this logic if needed)
            selected_dashboard_url = filtered_data.iloc[0]['URL']
            
            # Open the URL using webbrowser.open
            webbrowser.open(selected_dashboard_url)
        else:
            status_label.config(text="No matching dashboard found.")
    
def update_step_label():
    step_label.config(text=f"Step {current_step + 1}: Select {list(suggestions.keys())[current_step]}")

# Create the main application window
root = tk.Tk()
root.title("Power BI Dashboard Opener")

# Create and configure labels and entry fields
frame = ttk.Frame(root)
frame.pack(padx=10, pady=10)

step_label = ttk.Label(frame, text="", style="TLabel")
step_label.grid(row=0, columnspan=2)
update_step_label()

if current_step == 0:
    ttk.Label(frame, text="Select a department:").grid(row=1, column=0)
    department_var = tk.StringVar()
    department_entry = ttk.Combobox(frame, textvariable=department_var)
    department_entry.grid(row=1, column=1)
    department_entry['values'] = suggestions['Department']
    
if current_step == 1:
    ttk.Label(frame, text="Select a sub-department:").grid(row=1, column=0)
    sub_department_var = tk.StringVar()
    sub_department_entry = ttk.Combobox(frame, textvariable=sub_department_var)
    sub_department_entry.grid(row=1, column=1)
    sub_department_entry['values'] = suggestions['Sub-Department']
    
if current_step == 2:
    ttk.Label(frame, text="Select a manager:").grid(row=1, column=0)
    manager_var = tk.StringVar()
    manager_entry = ttk.Combobox(frame, textvariable=manager_var)
    manager_entry.grid(row=1, column=1)
    manager_entry['values'] = suggestions['Manager']
    
if current_step == 3:
    ttk.Label(frame, text="Enter a keyword:").grid(row=1, column=0)
    keyword_var = tk.StringVar()
    keyword_entry = ttk.Entry(frame, textvariable=keyword_var)
    keyword_entry.grid(row=1, column=1)

# Create a "Submit" button
submit_button = ttk.Button(frame, text="Submit", command=submit)
submit_button.grid(row=2, columnspan=2)

status_label = ttk.Label(root, text="", style="TLabel")
status_label.pack()

# Start the GUI application
root.mainloop()
