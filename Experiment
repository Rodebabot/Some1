import tkinter as tk
from tkinter import filedialog, scrolledtext
import difflib
import PyPDF2
from docx import Document

class DocumentComparatorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Document Comparator")

        self.text_area = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=50, height=10)
        self.text_area.pack(pady=10)

        upload_button1 = tk.Button(root, text="Upload Document 1", command=self.load_document1)
        upload_button1.pack()

        upload_button2 = tk.Button(root, text="Upload Document 2", command=self.load_document2)
        upload_button2.pack()

        compare_button = tk.Button(root, text="Compare Documents", command=self.compare_documents)
        compare_button.pack()

    def load_document1(self):
        self.document1 = self.load_pdf_document()  # Change to self.load_word_document() for Word documents

    def load_document2(self):
        self.document2 = self.load_pdf_document()  # Change to self.load_word_document() for Word documents

    def load_pdf_document(self):
        file_path = filedialog.askopenfilename()
        with open(file_path, 'rb') as file:
            pdf_reader = PyPDF2.PdfFileReader(file)
            document_content = ''
            for page_num in range(pdf_reader.numPages):
                page = pdf_reader.getPage(page_num)
                document_content += page.extract_text()
        return document_content

    def load_word_document(self):
        file_path = filedialog.askopenfilename()
        document = Document(file_path)
        document_content = '\n'.join([paragraph.text for paragraph in document.paragraphs])
        return document_content

    def compare_documents(self):
        try:
            standard_doc = self.document1
            other_doc = self.document2

            d = difflib.Differ()
            diff = list(d.compare(standard_doc.splitlines(), other_doc.splitlines()))

            # Highlight differences
            highlighted_text = self.highlight_diff(diff)

            # Display or save the highlighted text
            self.display_highlighted_text(highlighted_text)
        except AttributeError:
            # Handle case where one or both documents are not loaded
            pass

    def highlight_diff(self, diff):
        highlighted_text = ''
        for line in diff:
            if line.startswith('+ '):  # Lines unique to the second document
                highlighted_text += f'{line[2:]}'
                self.text_area.tag_add("highlight", "insert linestart", "insert lineend")
                self.text_area.tag_configure("highlight", background="yellow")
                self.text_area.update_idletasks()
            else:
                highlighted_text += f'{line[2:]}'

        return highlighted_text

    def display_highlighted_text(self, highlighted_text):
        result_window = tk.Toplevel(self.root)
        result_window.title("Highlighted Document")

        result_text = scrolledtext.ScrolledText(result_window, wrap=tk.WORD, width=50, height=10)
        result_text.insert(tk.END, highlighted_text)
        result_text.pack(pady=10)

if __name__ == "__main__":
    root = tk.Tk()
    app = DocumentComparatorApp(root)
    root.mainloop()
