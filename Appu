import pandas as pd
import tkinter as tk
from tkinter import Entry, Button, StringVar

# Read the Excel file into a DataFrame
df = pd.read_excel('your_excel_file.xlsx')

# Create a set to store unique combinations of words
combinations_set = set()

# Generate all combinations of words from the first and second columns
for index, row in df.iterrows():
    words1 = row['1st Column'].split()  # Split the words by space
    words2 = row['2nd Column'].split()

    combinations = []
    
    # Generate all combinations of words from the two columns
    for w1 in words1:
        for w2 in words2:
            combination = ' '.join([w1, w2])
            combinations_set.add(combination)
            # Also, add the reversed combination
            reversed_combination = ' '.join([w2, w1])
            combinations_set.add(reversed_combination)

# Create a tkinter GUI
root = tk.Tk()
root.title("URL Opener")

# Create a StringVar to store the user input
user_input_var = StringVar()

# Create an Entry widget for user input with autocomplete
entry = Entry(root, textvariable=user_input_var)
entry.pack()

# Function to handle button click and open the URL
def open_url():
    user_input = user_input_var.get()
    if user_input in combinations_set:
        url = df[df.apply(lambda row: user_input in row['1st Column'] + ' ' + row['2nd Column'], axis=1)]['3rd Column'].values[0]
        # Use the webbrowser library to open the URL
        import webbrowser
        webbrowser.open(url)
    else:
        print("URL not found for the input.")

# Create a button to submit the input
submit_button = Button(root, text="Submit", command=open_url)
submit_button.pack()

# Implement real-time suggestions based on user input
def suggest():
    user_input = user_input_var.get()
    suggestions = [key for key in combinations_set if key.startswith(user_input)]
    if suggestions:
        # Update the autocomplete list
        entry['values'] = tuple(suggestions)
    else:
        entry['values'] = ()

# Bind the suggest function to the Entry widget for real-time suggestions
entry.bind('<KeyRelease>', lambda event: suggest())

root.mainloop()
