import pandas as pd
import win32com.client as win32
import tempfile

# Assuming df is your DataFrame
# Filter the DataFrame to include only rows with 'Risk' in the 'At risk' column
risk_df = df[df['At risk'] == 'Risk']

# Filter the DataFrame to include only rows with 'Overdue' in the 'Reg' column
overdue_df = df[df['Reg'] == 'Overdue']

# Filter the DataFrame to include only rows where 'Reg' is "Overdue" and 'Reg Remediation Committed date' is not NaN or not blank
deb_df = overdue_df[overdue_df['Reg Remediation Committed date'].notna()]

# Calculate number of 'Overdue', 'Risk', and 'Deb'
overdue_count = overdue_df.shape[0]
at_risk_count = risk_df.shape[0]
deb_count = deb_df.shape[0]

# Create sentences based on conditions
overdue_sentence = f"Today's Overdue number is {overdue_count}." if overdue_count > 5 else "No need to worry about Overdue number for today."
at_risk_sentence = f"There are {at_risk_count} UIDs At risk. You should look into it." if at_risk_count >= 5 else "No need to worry about At risk UIDs, it's well under control."
deb_sentence = f"Esc Deb Data: {deb_count} records where 'Reg' is 'Overdue' and 'Reg Remediation Committed date' is not NaN or not blank."

# Determine if the email should be marked as important
is_important = overdue_count > 5 or at_risk_count >= 5 or deb_count > 0

# Send emails using Outlook
outlook = win32.Dispatch('outlook.application')
mail = outlook.CreateItem(0)

# Set email recipients
mail.To = "recipient@example.com"
mail.CC = "cc1@example.com; cc2@example.com"

# Set email subject
mail.Subject = "Important Updates"

# Mark the email as important if needed
if is_important:
    mail.Importance = 2  # 2 represents importance level 'High'

# Add clickable links with respective mail bodies
mail.HTMLBody = f"""<p><a href="mailto:aniket@example.com?subject=Aniket%20please%20look%20into%20this&body={overdue_sentence}">Esc Ani</a></p>
                    <p><a href="mailto:silka@example.com?subject=Silka%20please%20look%20into%20this&body={at_risk_sentence}">Esc Silka</a></p>
                    <p><a href="mailto:deb@example.com?subject=Esc%20Deb%20Data&body={deb_sentence}">Esc Deb</a></p>"""

# Save the tables to temporary files
overdue_temp_file = tempfile.NamedTemporaryFile(suffix='.html', delete=False)
overdue_df.to_html(overdue_temp_file.name, index=False)

risk_temp_file = tempfile.NamedTemporaryFile(suffix='.html', delete=False)
risk_df.to_html(risk_temp_file.name, index=False)

deb_temp_file = tempfile.NamedTemporaryFile(suffix='.html', delete=False)
deb_df.to_html(deb_temp_file.name, index=False)

# Attach the tables to the email drafts
mail.Attachments.Add(overdue_temp_file.name)
mail.Attachments.Add(risk_temp_file.name)
mail.Attachments.Add(deb_temp_file.name)

# Send email
mail.Display()
