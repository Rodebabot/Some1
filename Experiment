import pandas as pd

# Load the Excel file
file_path = '/mnt/data/your_excel_file.xlsx'  # Replace with the actual file path
df = pd.read_excel(file_path)

# Ensure the column names are correct as per the provided screenshot
df.columns = ['Unique Eventid', 'Legal Entity', 'Trade ID', 'ROC', 'Age', 'Age Band', 'Counterparty Name', 'Business Event', 'Product Representation', 'Days Spent']

# Identify Unique Eventid that have at least one 'Closed' in the ROC column
closed_event_ids = df[df['ROC'] == 'Closed']['Unique Eventid'].unique()

# Identify Unique Eventid that do not have any 'Closed' in the ROC column
all_event_ids = df['Unique Eventid'].unique()
non_closed_event_ids = list(set(all_event_ids) - set(closed_event_ids))

# Count the Unique Eventid that have and do not have 'Closed' in the ROC column
count_closed_event_ids = len(closed_event_ids)
count_non_closed_event_ids = len(non_closed_event_ids)

# Print the counts
print(f"Count of Unique Eventid with at least one 'Closed' in ROC: {count_closed_event_ids}")
print(f"Count of Unique Eventid without 'Closed' in ROC: {count_non_closed_event_ids}")

# Filter the DataFrame to keep only rows corresponding to Unique Eventid that have 'Closed' in the ROC column
filtered_df = df[df['Unique Eventid'].isin(closed_event_ids)]

# Save the filtered DataFrame to a new Excel file
filtered_df.to_excel('/mnt/data/filtered_data_with_closed_roc.xlsx', index=False)

print("Filtering completed. Results saved to filtered_data_with_closed_roc.xlsx")
