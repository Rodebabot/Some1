import pandas as pd
import tkinter as tk
from tkinter import Entry, Button, StringVar, Listbox
import itertools

# Read the Excel file into a DataFrame
df = pd.read_excel('your_excel_file.xlsx')

# Create a dictionary to store URLs
url_dict = {}

# Generate all combinations of words from the first and second columns
for index, row in df.iterrows():
    words1 = row['1st Column'].split()  # Split the words by space
    words2 = row['2nd Column'].split()

    # Generate all permutations of words from the two columns
    permutations = list(itertools.permutations(words1 + words2))

    # Add each permutation to the dictionary
    for perm in permutations:
        combination = ' '.join(perm)
        url_dict[combination] = row['3rd Column']

# Create a tkinter GUI
root = tk.Tk()
root.title("URL Opener")

# Create a StringVar to store the user input
user_input_var = StringVar()

# Create an Entry widget for user input
entry = Entry(root, textvariable=user_input_var)
entry.pack()

# Create a Listbox widget for suggestions
suggestion_listbox = Listbox(root, height=5)
suggestion_listbox.pack()

# Function to handle button click and open the URL
def open_url():
    user_input = user_input_var.get()
    user_input = user_input.lower()  # Convert input to lowercase for case-insensitive matching

    # Check if the user input exactly matches a combination in the Excel file
    if user_input in url_dict:
        url = url_dict[user_input]
        # Use the webbrowser library to open the URL
        import webbrowser
        webbrowser.open(url)
    else:
        print("URL not found for the input.")

# Create a button to submit the input
submit_button = Button(root, text="Submit", command=open_url)
submit_button.pack()

# Function to update the Listbox with suggestions
def suggest():
    user_input = user_input_var.get()
    suggestions = [key for key in url_dict.keys() if key.startswith(user_input)]
    suggestion_listbox.delete(0, tk.END)  # Clear the existing suggestions
    for suggestion in suggestions:
        suggestion_listbox.insert(tk.END, suggestion)

# Bind the suggest function to the Entry widget for real-time suggestions
entry.bind('<KeyRelease>', lambda event: suggest())

# Function to handle suggestion selection
def select_suggestion(event):
    selected_suggestion = suggestion_listbox.get(suggestion_listbox.curselection())
    user_input = user_input_var.get()
    user_input += selected_suggestion  # Complete the combination
    user_input_var.set(user_input)  # Update the user input
    open_url()  # Trigger the URL

# Bind the select_suggestion function to the Listbox's click event
suggestion_listbox.bind('<ButtonRelease-1>', select_suggestion)

root.mainloop()
