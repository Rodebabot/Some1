import pandas as pd
import win32com.client
import os
import datetime

# Load the Excel file into a pandas DataFrame
excel_file = 'path_to_your_excel_file.xlsx'
df = pd.read_excel(excel_file)

# Connect to Outlook
outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")

# Replace 'SubfolderName' with the name of the subfolder where you want to check for emails
inbox = outlook.GetDefaultFolder(6).Folders['SubfolderName'].Items

# Dictionary to store email counts per sender and subject combination
email_counts = {}

# Loop through each email in the subfolder
for email in inbox:
    sender = email.SenderEmailAddress
    subject = email.Subject
    received_date = email.ReceivedTime.date()

    # Check if the combination of sender and subject exists in the DataFrame
    matched_row = df[(df['SenderName'] == sender) & (df['Subject'] == subject)]

    if not matched_row.empty:
        # Get the folder location from the first matched row
        folder_location = matched_row.iloc[0]['FolderLocation']

        # Determine email identifier (EOD, MOD, SOD, or Final) based on email count for the day
        email_key = f"{sender}_{subject}_{received_date}"
        email_counts.setdefault(email_key, 0)
        email_counts[email_key] += 1

        email_count = email_counts[email_key]
        timestamp = datetime.datetime.now().strftime("%Y%m%d%H%M%S")
        attachment_filename = attachment.FileName

        if email_count == 1:
            filename = f"EOD_{timestamp}_{attachment_filename}"
        elif email_count == 2:
            filename = f"MOD_{timestamp}_{attachment_filename}"
        elif email_count == 3:
            filename = f"SOD_{timestamp}_{attachment_filename}"
        elif email_count >= 4:
            filename = f"Final_{timestamp}_{attachment_filename}"

        # Save the attachments in the corresponding location with the new filename
        for attachment in email.Attachments:
            attachment.SaveAsFile(os.path.join(folder_location, filename))

        print(f"Attachment '{attachment_filename}' saved as '{filename}'")

print("Attachments saved successfully.")


