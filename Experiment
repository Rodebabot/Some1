import pandas as pd
import plotly.express as px
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output
from datetime import datetime, timedelta
from statsmodels.tsa.statespace.sarimax import SARIMAX

# Read the Excel file
df = pd.read_excel('your_excel_file.xlsx')

# Convert the date column to datetime format
df['Date'] = pd.to_datetime(df['Date'], format="%b'%y")

# Sort DataFrame by date
df = df.sort_values('Date')

# Define SARIMA order
order = (1, 1, 1, 12)  # You may need to adjust these parameters based on your data and requirements

# Fit SARIMA model
model = SARIMAX(df['Volume'], order=order)
results = model.fit(disp=-1)

# Forecast next 6 months
forecast_dates = [df['Date'].max() + pd.DateOffset(months=i) for i in range(1, 7)]
forecast = results.get_forecast(steps=6)
forecast_values = forecast.predicted_mean.values

# Create a new DataFrame for the forecasted values
forecast_df = pd.DataFrame({'Date': forecast_dates, 'Projected Volume': forecast_values})

# Concatenate the original DataFrame and the forecasted DataFrame
df = pd.concat([df, forecast_df])

# Create a Dash app
app = dash.Dash(__name__)

# Define the layout
app.layout = html.Div([
    dcc.Graph(
        id='line-chart',
        figure=px.line(df, x='Date', y='Volume', title='Volume Projection')
    )
])

# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)
