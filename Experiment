import pandas as pd
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output
import plotly.express as px

# Load data from the Excel file
file_path = '/mnt/data/your_excel_file.xlsx'  # Update with your file path
df = pd.read_excel(file_path, sheet_name='Sheet1')

# Aggregate data by Entity and CCY
aggregated_df = df.groupby(['Entity', 'CCY']).sum().reset_index()

# Initialize Dash app
app = dash.Dash(__name__)

app.layout = html.Div([
    dcc.Graph(id='main-graph'),
    dcc.Graph(id='detailed-graph'),
])

@app.callback(
    Output('main-graph', 'figure'),
    Input('main-graph', 'clickData')
)
def update_main_graph(clickData):
    fig = px.bar(aggregated_df, x='Entity', y='Value', color='CCY', barmode='group')  # Ensure 'Value' matches your sum column
    return fig

@app.callback(
    Output('detailed-graph', 'figure'),
    [Input('main-graph', 'clickData')]
)
def update_detailed_graph(clickData):
    if clickData:
        entity = clickData['points'][0]['x']
        ccy = aggregated_df.loc[clickData['points'][0]['pointIndex'], 'CCY']
        filtered_df = df[(df['Entity'] == entity) & (df['CCY'] == ccy)]
        fig = px.bar(filtered_df, x='Counterparty Name', y='Value', color='CCY', barmode='group')  # Ensure 'Value' matches your sum column
    else:
        fig = px.bar()  # Empty figure if no clickData
    return fig

if __name__ == '__main__':
    app.run_server(debug=True)
