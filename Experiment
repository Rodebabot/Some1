import pandas as pd

# Load the dataset
file_path = '/mnt/data/your_excel_file.xlsx'  # Replace with the actual file path
df = pd.read_excel(file_path)

# Ensure the column names are correct as per the provided screenshot
df.columns = ['Unique Eventid', 'Legal Entity', 'Trade ID', 'ROC', 'Age', 'Age Band', 'Counterparty Name', 'Business Event', 'Product Representation', 'Days Spent', 'Action Items']

# Group by ROC and calculate the average days spent, standard deviation, min, and max
roc_stats = df.groupby('ROC')['Days Spent'].agg(['mean', 'std', 'min', 'max']).reset_index()

# Calculate the coefficient of variation (CV) as std/mean
roc_stats['Coefficient of Variation'] = roc_stats['std'] / roc_stats['mean']

# Determine the median CV and average days spent for tagging
median_cv = roc_stats['Coefficient of Variation'].median()
median_days_spent = roc_stats['mean'].median()

# Create new columns for volatility and average days spent tagging
roc_stats['Volatility Tag'] = roc_stats['Coefficient of Variation'].apply(lambda x: 'High' if x > median_cv else 'Low')
roc_stats['Average Days Spent Tag'] = roc_stats['mean'].apply(lambda x: 'High' if x > median_days_spent else 'Low')

# Define a function to calculate the percentage distribution within each age band for a specific ROC
def calculate_age_band_distribution(roc):
    # Filter the data for the specific ROC
    roc_data = df[df['ROC'] == roc]
    age_band_distribution = roc_data['Age Band'].value_counts(normalize=True) * 100
    
    return age_band_distribution

# Apply the function to each ROC and create new columns for each Age Band
age_band_stats = df.groupby(['ROC', 'Age Band']).size().unstack(fill_value=0)
age_band_percentages = age_band_stats.div(age_band_stats.sum(axis=1), axis=0) * 100

# Merge the percentage distribution back into the roc_stats dataframe
roc_stats = roc_stats.merge(age_band_percentages, on='ROC')

# Rename columns for clarity
roc_stats.rename(columns={'mean': 'Average Days Spent', 'std': 'Standard Deviation', 'min': 'Min Days Spent', 'max': 'Max Days Spent'}, inplace=True)

# Display the results
print(roc_stats)

# Save the results to an Excel file
roc_stats.to_excel('/mnt/data/roc_analysis_with_age_band_distribution.xlsx', index=False)

print("ROC analysis with age band distribution saved to roc_analysis_with_age_band_distribution.xlsx")
