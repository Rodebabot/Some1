import os
import pandas as pd
import datetime

# Get current month and year
current_month_year = datetime.datetime.now().strftime("%b %Y")

# Calculate yesterday's date
yesterday_date = datetime.datetime.now() - datetime.timedelta(days=1)
yesterday_day_month = yesterday_date.strftime("%d %b")

# Specify the parent directory to search
parent_directory_path = "/path/to/parent/directory"

# List directories in the parent directory
directories = [d for d in os.listdir(parent_directory_path) if os.path.isdir(os.path.join(parent_directory_path, d))]

# Filter directories based on current month and year
matching_directories = [d for d in directories if current_month_year in d]

# Initialize the variable to store the Excel file name
excel_file_name = None

# If there's a matching directory for the current month and year, navigate into it
if matching_directories:
    current_month_directory = os.path.join(parent_directory_path, matching_directories[0])
    print("Found directory for current month and year:", current_month_directory)
    
    # List directories inside the current month directory
    month_directories = [d for d in os.listdir(current_month_directory) if os.path.isdir(os.path.join(current_month_directory, d))]

    # Filter directories based on yesterday's date
    matching_yesterday_directories = [d for d in month_directories if yesterday_day_month in d]
    
    # If there's a matching directory for yesterday's date, navigate into it
    if matching_yesterday_directories:
        yesterday_directory = os.path.join(current_month_directory, matching_yesterday_directories[0])
        print("Found yesterday's directory:", yesterday_directory)
        
        # List files inside yesterday's directory
        files = [f for f in os.listdir(yesterday_directory) if os.path.isfile(os.path.join(yesterday_directory, f))]
        
        # Filter Excel files
        excel_files = [f for f in files if f.endswith('.xlsx') or f.endswith('.xls')]
        
        # Check if there is at least one Excel file
        if len(excel_files) > 0:
            # Assuming you want to store the first Excel file name found without extension
            excel_file_name_with_extension = excel_files[0]
            excel_file_name = os.path.splitext(excel_file_name_with_extension)[0]
            
            # Assuming you want to read the first Excel file found
            excel_file_path = os.path.join(yesterday_directory, excel_file_name_with_extension)
            try:
                # Read all sheets from the Excel file
                all_dfs = pd.read_excel(excel_file_path, sheet_name=None)
            except Exception as e:
                print("Error reading Excel file:", e)
                raise

            # Access each DataFrame individually
            df1 = all_dfs['Sheet1']  # Change 'Sheet1' to the actual sheet name
            df2 = all_dfs['Sheet2']  # Change 'Sheet2' to the actual sheet name
            df3 = all_dfs['Sheet3']  # Change 'Sheet3' to the actual sheet name
            df4 = all_dfs['Sheet4']  # Change 'Sheet4' to the actual sheet name

            # Example usage of the DataFrames
            print(df1.head())
            print(df2.head())
            print(df3.head())
            print(df4.head())
        else:
            print("No Excel files found in yesterday's directory.")
    else:
        print("No directory found for yesterday's date inside the current month and year directory.")
else:
    print("No directory found for the current month and year.")

# Now excel_file_name variable contains the name of the Excel file without extension, you can use it as needed
print("Excel file name without extension:", excel_file_name)
