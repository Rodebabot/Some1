import os

folder_path = '/path/to/your/folder'

def rename_files_in_folder(folder_path):
    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        if os.path.isfile(file_path):
            # Split the filename and extension
            base_name, extension = os.path.splitext(filename)
            
            # Split the base name by hyphen to check for occurrences
            parts = base_name.split('-')
            
            # Create a new base name with only one occurrence of each keyword
            new_base_name = []
            keywords = ['-SOD', '-MOD', '-EOD', '-FINAL']
            for part in parts:
                if part in keywords:
                    keywords.remove(part)
                new_base_name.append(part)
            
            # Combine the new base name and extension
            new_filename = '-'.join(new_base_name) + extension
            
            # Rename the file if needed
            if new_filename != filename:
                new_file_path = os.path.join(folder_path, new_filename)
                os.rename(file_path, new_file_path)
                print(f'Renamed: {filename} -> {new_filename}')

rename_files_in_folder(folder_path)





import pyaudio
import wave

# Configuration (same as before)

try:
    audio = pyaudio.PyAudio()

    # Open a streaming stream
    stream = audio.open(format=FORMAT, channels=CHANNELS,
                        rate=RATE, input=True,
                        frames_per_buffer=CHUNK)

    print("Recording...")

    frames = []

    # Record audio in chunks and store it in the frames list
    for _ in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
        data = stream.read(CHUNK)
        frames.append(data)

    print("Finished recording.")

    # Close and terminate the audio stream and PyAudio
    stream.stop_stream()
    stream.close()
    audio.terminate()

    # Save the recorded audio to a WAV file
    with wave.open(OUTPUT_FILENAME, 'wb') as wf:
        wf.setnchannels(CHANNELS)
        wf.setsampwidth(audio.get_sample_size(FORMAT))
        wf.setframerate(RATE)
        wf.writeframes(b''.join(frames))

    print(f"Audio saved as {OUTPUT_FILENAME}")

except Exception as e:
    print("An error occurred:", str(e))
