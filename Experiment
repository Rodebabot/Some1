import webbrowser
import tkinter as tk

def google_search(query):
    search_url = f"https://www.google.com/search?q={query}"
    webbrowser.open(search_url)

def on_search_button_click():
    query = entry.get()
    google_search(query)

# Create a simple Tkinter window
window = tk.Tk()
window.title("Google Search")

# Create a text entry for the search query
entry = tk.Entry(window, width=30)
entry.pack(pady=10)

# Create a button to perform the Google search
search_button = tk.Button(window, text="Search Google", command=on_search_button_click)
search_button.pack()

# Run the Tkinter event loop
window.mainloop()





Certainly! Here are some pointers for the future states and plans for your project, as well as additional possibilities using data analytics and Python:

1. **Enhance Keyword Analysis:**
   - Refine and expand the list of keywords to improve the accuracy of sentiment analysis.
   - Consider using natural language processing (NLP) techniques to better understand context and sentiment in news articles.

2. **Advanced Sentiment Analysis:**
   - Explore sentiment analysis models like VADER or machine learning-based approaches for more nuanced sentiment scoring.
   - Implement sentiment intensity analysis to quantify the strength of sentiment in news articles.

3. **Dynamic In-House Datasets:**
   - Create mechanisms to dynamically update your in-house datasets to incorporate new information and adapt to changing economic conditions.
   - Explore automated methods for dataset enrichment, such as pulling in additional economic indicators or relevant data from external sources.

4. **Geospatial Analysis:**
   - Utilize geospatial data to analyze the geographical impact of negative news on specific countries or regions.
   - Incorporate geographic information systems (GIS) to visualize and analyze economic effects on a map.

5. **Time Series Analysis:**
   - Implement time series analysis to understand how economic indicators change over time in response to negative news.
   - Forecast future economic trends based on historical data and news sentiment.

6. **Machine Learning for Triggering:**
   - Train machine learning models to automatically trigger relevant rows in your datasets based on news sentiment, countries, and currencies.
   - Explore unsupervised learning techniques for pattern recognition and anomaly detection.

7. **User Interface and Reporting:**
   - Develop a user-friendly interface to display insights and alerts generated by your system.
   - Create customizable reports that highlight the impact of negative news on specific economic factors.

8. **Social Media Integration:**
   - Integrate social media data for a more comprehensive analysis of public sentiment.
   - Analyze how social media trends correlate with news sentiment and economic indicators.

9. **Regulatory Compliance Monitoring:**
   - Implement features to monitor and ensure compliance with relevant regulations, especially in industries sensitive to news and economic changes.

10. **Collaboration with Domain Experts:**
    - Collaborate with economists, financial analysts, or domain experts to refine and validate the analysis and improve the system's accuracy.

Remember to keep iterating on your project, incorporating feedback, and staying updated with advancements in data analytics and Python libraries for continuous improvement.
