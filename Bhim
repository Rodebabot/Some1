import pandas as pd
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output
import webbrowser

# Load the Excel sheets
df1 = pd.read_excel('period1.xlsx')  # Update with the actual filename of period 1 sheet
df2 = pd.read_excel('period2.xlsx')  # Update with the actual filename of period 2 sheet

# Create the Dash app
app = dash.Dash(__name__)
import pandas as pd

data = pd.read_excel("NEWWW.xlsx")

data_list = data.values.tolist()

for row in data_list:

	idx_of_cusip = row.index('cusip')
	
	numbers = row[1:idx_of_cusip]

	numbers_int_to_str = [str(number) for number in numbers]

	combined_numbers = ' '.join(numbers_int_to_str)

	row[1] = combined_numbers

	del row[2:idx_of_cusip]

back_to_df = pd.DataFrame(data_list)

back_to_df.to_excel('output.xlsx', index=False)

from openpyxl import load_workbook

def delete_rows_between_keywords(filename, sheetname, start_keyword, end_keyword):
    # Load the workbook
    workbook = load_workbook(filename)
    # Select the worksheet
    worksheet = workbook[sheetname]
    
    rows_to_delete = []  # Store rows to be deleted
    
    # Iterate through each row
    for row in worksheet.iter_rows(min_row=1, min_col=1, max_col=1, values_only=True):
        if row[0] == start_keyword:
            start_row = row[0].row
        elif row[0] == end_keyword:
            end_row = row[0].row
            # Add rows to be deleted
            rows_to_delete.extend(range(start_row + 1, end_row + 1))
    
    # Delete rows in reverse order to avoid shifting row indexes



    for row in reversed(rows_to_delete):
        worksheet.delete_rows(row)
    
    # Save the modified workbook
    workbook.save(f"modified_{filename}")

# Example usage
filename = "your_file.xlsx"
sheetname = "Sheet1"
start_keyword = "NORA"
end_keyword = "CUSIP:"

delete_rows_between_keywords(filename, sheetname, start_keyword, end_keyword)







import pandas as pd

# Load the Excel file
excel_file = 'path/to/your/file.xlsx'
df = pd.read_excel(excel_file)

# Initialize variables
start_row = None
delete_range = False

# Iterate over each row
for index, row in df.iterrows():
    if delete_range:
        # Delete the rows within the range
        df.drop(index, inplace=True)
    elif start_row is not None and 'CUSIP:' in row.values:
        # Identify the next 'CUSIP:' row
        delete_range = True
    elif 'NORA' in row.values:
        # Identify the 'NORA' row
        start_row = index

# Save the modified DataFrame to a new Excel file
output_file = 'path/to/your/output_file.xlsx'
df.to_excel(output_file, index=False)

