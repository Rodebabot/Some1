import tkinter as tk
from tkinter import ttk

def create_table(parent, headings, data, escalation_emails):
    table = ttk.Treeview(parent, columns=headings, show="headings", style="Custom.Treeview")
    for col in headings:
        table.heading(col, text=col)
    for idx, row in enumerate(data):
        table.insert('', 'end', values=row + (escalation_emails[idx],))
    return table

def escalate(entry_id):
    # Placeholder function for escalation action
    print(f"Entry {entry_id} escalated!")

def add_buttons(table):
    for idx in table.get_children():
        btn = ttk.Button(table, text="Escalate", command=lambda idx=idx: escalate(idx))
        table.window_create(idx, column="Escalate", window=btn)

def main():
    # Create main window
    root = tk.Tk()
    root.title("Your App Title")

    # Custom styles
    style = ttk.Style()
    style.configure("Custom.Treeview", background="#f0f0f0", foreground="#333", rowheight=25)

    # Fields Table
    fields_frame = ttk.LabelFrame(root, text="Fields", style="Custom.TLabelframe")
    fields_frame.pack(padx=10, pady=10, fill="both", expand=True)

    fields_headings = ["Sales", "Escalation Contacts", "Risk", "SSR Rate", "Escalate"]
    fields_data = [
        ("Value1", "Value2", "Value3", "Value4"),
        ("Value5", "Value6", "Value7", "Value8"),
        # Add more rows as needed
    ]
    escalation_emails = [
        "escalation1@example.com",
        "escalation2@example.com",
        # Add more emails as needed
    ]
    fields_table = create_table(fields_frame, fields_headings[:-1], fields_data, escalation_emails)
    fields_table.pack(fill="both", expand=True)

    # Add escalate buttons
    add_buttons(fields_table)

    # Bespoke Processes Table
    processes_frame = ttk.LabelFrame(root, text="Bespoke Processes", style="Custom.TLabelframe")
    processes_frame.pack(padx=10, pady=10, fill="both", expand=True)

    processes_headings = ["Process", "Time Required per Exception", "Count of Exception Last Month"]
    processes_data = [
        ("FX", "2 hours", 10),
        ("OTC", "1.5 hours", 5),
        # Add more rows as needed
    ]
    processes_table = create_table(processes_frame, processes_headings, processes_data, [])
    processes_table.pack(fill="both", expand=True)

    root.mainloop()

if __name__ == "__main__":
    main()
