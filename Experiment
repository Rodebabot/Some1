import pandas as pd

# Create a pandas dataframe (replace with your actual data)
df = pd.DataFrame({
    'Entity': ['12345', 'NFPS', 'NFPE', 'NIP', 'NFPS', 'NGFP', 'NIP'],
    'Counterparty Name': ['', 'WMA', 'NEPE', '', 'NEPE', '', ''],
    'CCY': ['EUR', 'EUR', 'GBP', 'EUR', 'GBP', 'EUR', 'EUR'],
    'Value1': [100, None, 200, None, 300, None, None],
    'Value2': [None, 50, None, None, None, 40, None],
    # You can add more columns here with any name
})

# Define a function to process each group
def process_group(group_df):
  # Combine 'Entity' and 'Counterparty Name' columns
  group_df['Entity_Counterparty'] = group_df['Entity'] + ' ' + group_df['Counterparty Name']
  
  # Select columns starting from 'CCY' onwards (assuming data columns start after that)
  data_cols = group_df.columns[2:]
  
  # Loop through each row and create a new row with combined name
  new_df = pd.DataFrame(columns=['Entity_Counterparty'])
  for index, row in group_df.iterrows():
    combined_name = row['Entity_Counterparty']
    for col in data_cols:
      value = row[col]
      new_row = pd.DataFrame([[combined_name, value]], columns=['Entity_Counterparty', col])
      new_df = pd.concat([new_df, new_row], ignore_index=True)
  return new_df

# Loop through each group of 'Entity' and 'Counterparty Name'
for i in range(len(df)):
  # Check if the current row is the start of a new group
  if i > 0 and (df.loc[i, 'Entity'] != df.loc[i-1, 'Entity'] or df.loc[i, 'Counterparty Name'] != df.loc[i-1, 'Counterparty Name']):
    # Get the group dataframe (boolean indexing to handle potential missing data columns)
    group_df = df[df['CCY'].notnull() & df['Entity
