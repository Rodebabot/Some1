import tkinter as tk
from tkinter import filedialog
import pandas as pd
from plyer import notification
import subprocess

class ExcelNotifierApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Excel Notifier App")

        self.file_path = None
        self.df = None
        self.rows_exceeded = []

        self.create_widgets()

    def create_widgets(self):
        tk.Label(self.root, text="Select Excel File:").pack(pady=10)

        tk.Button(self.root, text="Browse", command=self.browse_file).pack(pady=5)

        self.submit_button = tk.Button(self.root, text="Submit", command=self.process_excel)
        self.submit_button.pack(pady=10)
        self.submit_button["state"] = "disabled"

        self.action_button = tk.Button(self.root, text="Action", command=self.perform_action)
        self.action_button.pack(pady=10)
        self.action_button["state"] = "disabled"

        self.listbox = tk.Listbox(self.root, selectmode=tk.MULTIPLE)
        self.listbox.pack(pady=10)

    def browse_file(self):
        self.file_path = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx;*.xls")])
        if self.file_path:
            self.submit_button["state"] = "normal"

    def process_excel(self):
        self.df = pd.read_excel(self.file_path)
        pending_column = self.df['pending']
        time_column = self.df['time']

        self.rows_exceeded = []
        for i in range(len(self.df)):
            if pending_column[i] > 1000 or time_column[i] > 3:
                self.rows_exceeded.append(i)
                notification.notify(
                    title=f"Notification - {self.file_path}",
                    message=f"Row {i+2} exceeded Pending or Time: "
                            f"Pending({pending_column[i]}), Time({time_column[i]})",
                )

        if self.rows_exceeded:
            self.action_button["state"] = "normal"
            self.display_exceeded_rows()

    def display_exceeded_rows(self):
        self.listbox.delete(0, tk.END)
        for row in self.rows_exceeded:
            self.listbox.insert(tk.END, f"Row {row + 2}")

    def perform_action(self):
        selected_rows = self.listbox.curselection()

        if not selected_rows:
            return

        for selected_row in selected_rows:
            row_to_process = self.rows_exceeded[selected_row]
            print(f"Running action on Row {row_to_process + 2}")

            total_pending = self.df['pending'].sum()
            total_time = self.df['time'].max()

            if total_pending > 2000 and total_time > 3:
                # Run amt.ipynb
                subprocess.run(['jupyter', 'nbconvert', '--execute', 'amt.ipynb'])
                notification.notify(title="Action", message="Running amt.ipynb")
            elif total_pending > 2000:
                # Run jub.ipynb
                subprocess.run(['jupyter', 'nbconvert', '--execute', 'jub.ipynb'])
                notification.notify(title="Action", message="Running jub.ipynb")
            else:
                notification.notify(title="Action", message="No action required")

if __name__ == "__main__":
    root = tk.Tk()
    app = ExcelNotifierApp(root)
    root.mainloop()
