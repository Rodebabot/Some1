import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import numpy as np
from datetime import datetime, timedelta

# Assuming df is your DataFrame with columns 'date' and 'volume'
# Make sure 'date' is in datetime format
df['date'] = pd.to_datetime(df['date'])

# Create a new column for the number of days since the start
df['days_since_start'] = (df['date'] - df['date'].min()).dt.days

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df[['days_since_start']], df['volume'], test_size=0.2, random_state=42)

# Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict the next 6 months
last_date = df['date'].max()
future_dates = [last_date + timedelta(days=i) for i in range(1, 182)]
future_days_since_start = [(d - df['date'].min()).days for d in future_dates]

# Make predictions for the future dates
future_predictions = model.predict(np.array(future_days_since_start).reshape(-1, 1))

# Create a DataFrame for the future predictions
future_df = pd.DataFrame({'date': future_dates, 'predicted_volume': future_predictions})

# Print or use future_df as needed
print(future_df)
