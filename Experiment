import pandas as pd

# Sample DataFrame
data = {
    'Category': ['A', 'A', 'A', 'B', 'B', 'C', 'C', 'C', 'D'],
    'Value1': [10, 20, 30, 40, 50, 60, 70, 80, 90],
    'Value2': [1, 2, 3, 4, 5, 6, 7, 8, 9]
}
df = pd.DataFrame(data)

# Initialize a list to hold the rows for the new DataFrame
new_rows = []

# Iterate through the DataFrame
start_idx = 0
for i in range(1, len(df)):
    if df.iloc[i, 0] != df.iloc[i-1, 0]:
        # Append the current group of rows
        new_rows.append(df.iloc[start_idx:i])
        
        # Calculate the sum of the group starting from column 2
        total_row = df.iloc[start_idx:i, 2:].sum()
        total_row['Category'] = 'Total'
        total_row['Value1'] = ''  # Assuming Value1 should be empty for the Total row
        new_rows.append(pd.DataFrame([total_row]))
        
        # Update the start index
        start_idx = i

# Append the last group of rows and its total
new_rows.append(df.iloc[start_idx:])
total_row = df.iloc[start_idx:, 2:].sum()
total_row['Category'] = 'Total'
total_row['Value1'] = ''
new_rows.append(pd.DataFrame([total_row]))

# Concatenate all rows to form the final DataFrame
result_df = pd.concat(new_rows, ignore_index=True)

print(result_df)
