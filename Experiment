import os
import shutil
from datetime import datetime, timedelta

# Specify the parent directory where the search will begin
parent_directory = '/path/to/parent_directory'

# Construct the directory path for the current month folder (e.g., 'Mar 2024')
current_month = datetime.now().strftime('%b %Y')
current_month_directory = os.path.join(parent_directory, current_month)

# Check if the current month directory exists
if os.path.exists(current_month_directory):
    # Get a list of directories within the current month directory
    day_directories = [d for d in os.listdir(current_month_directory) if os.path.isdir(os.path.join(current_month_directory, d))]
    
    # Sort the day directories by their date (oldest to newest)
    day_directories.sort()

    # Check if there are at least two day directories
    if len(day_directories) >= 2:
        # Get the 2nd recent day directory name
        second_recent_day_directory_name = day_directories[-2]

        # Print the identified folder
        print(f"Identified folder: {second_recent_day_directory_name}")

        # Construct the directory path for the 2nd recent day directory
        second_recent_day_directory = os.path.join(current_month_directory, second_recent_day_directory_name)

        # Initialize counters for the files copied
        macro_file_copied = False
        date_file_copied = False

        # Iterate over the files in the 2nd recent day directory
        for filename in os.listdir(second_recent_day_directory):
            # Check if the filename contains 'Macro'
            if 'Macro' in filename:
                # Copy the file to the destination directory
                source_path = os.path.join(second_recent_day_directory, filename)
                destination_directory = '/path/to/destination_directory'
                destination_path = os.path.join(destination_directory, filename)
                shutil.copy(source_path, destination_path)
                print(f"File '{filename}' (Macro) copied to '{destination_directory}'")
                macro_file_copied = True

            # Check if the filename contains the derived date format (ddmm)
            if second_recent_day_directory_name.replace(' ', '').lower() in filename:
                # Copy the file to the destination directory
                source_path = os.path.join(second_recent_day_directory, filename)
                destination_directory = '/path/to/destination_directory'
                destination_path = os.path.join(destination_directory, filename)
                shutil.copy(source_path, destination_path)
                print(f"File '{filename}' (2nd recent date) copied to '{destination_directory}'")
                date_file_copied = True

            # Break if both files are copied
            if macro_file_copied and date_file_copied:
                break
    else:
        print("Insufficient day directories in the current month directory.")
else:
    print(f"Current month directory '{current_month_directory}' does not exist.")
