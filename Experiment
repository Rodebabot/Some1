4import pandas as pd
import win32com.client
import os
from datetime import datetime

# Load the Excel file into a pandas DataFrame
excel_file = 'path_to_your_excel_file.xlsx'
df = pd.read_excel(excel_file)

# Connect to Outlook
outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")

# Replace 'SubfolderName' with the name of the subfolder where you want to check for emails
inbox = outlook.GetDefaultFolder(6).Folders['SubfolderName'].Items

# Loop through each email in the subfolder
for email in inbox:
    sender = email.SenderEmailAddress
    subject = email.Subject
    received_date = email.ReceivedTime.date()
    today = datetime.today().date()

    # Check if the email was received today and if the combination of sender and subject exists in the DataFrame
    if received_date == today and not df[(df['SenderName'] == sender) & (df['Subject'] == subject)].empty:
        # Get the folder location from the first matched row
        folder_location = df[(df['SenderName'] == sender) & (df['Subject'] == subject)].iloc[0]['FolderLocation']

        # Save the attachments in the corresponding location
        for attachment in email.Attachments:
            attachment.SaveAsFile(os.path.join(folder_location, attachment.FileName))

print("Attachments from today's emails saved successfully.")


import os
import pandas as pd

# Define the directory path where your CSV files are located
directory_path = '/path/to/your/directory'

# List all files in the directory
files = os.listdir(directory_path)

# Iterate through the files in the directory
for file in files:
    if file.endswith('.csv'):
        # Create the full path for the CSV file
        csv_file_path = os.path.join(directory_path, file)

        # Import the CSV into a DataFrame
        df = pd.read_csv(csv_file_path)

        # Define the Excel file path with the same name but .xlsx extension
        excel_file_path = os.path.join(directory_path, file.replace('.csv', '.xlsx'))

        # Export the DataFrame to the Excel file
        df.to_excel(excel_file_path, index=False)

        print(f'{file} converted to {excel_file_path}')




import os
import shutil

# Define the source and destination folders
source_folder = '/path/to/source/folder'
destination_folder = '/path/to/destination/folder'

# Iterate through files in the source folder
for filename in os.listdir(source_folder):
    if "final" in filename.lower():
        # Move files containing 'final' in their name to the destination folder
        source_path = os.path.join(source_folder, filename)
        destination_path = os.path.join(destination_folder, filename)
        shutil.move(source_path, destination_path)
    else:
        # Delete other files in the source folder
        file_path = os.path.join(source_folder, filename)
        if os.path.isfile(file_path):
            os.remove(file_path)

print("Files containing 'final' in their name have been moved to the destination folder.")
print("All other files in the source folder have been deleted.")






import os
import shutil

# Define the paths to the folders
folder1 = 'f1'
folder2 = 'f2'

# List all files in folder1
files_in_f1 = os.listdir(folder1)

# Iterate through the files in folder1
for file_name in files_in_f1:
    file_path_f1 = os.path.join(folder1, file_name)
    file_path_f2 = os.path.join(folder2, file_name)

    # Check if the file from folder1 exists in folder2
    if not os.path.exists(file_path_f2):
        # Copy the file from folder1 to folder2










        shutil.copy2(file_path_f1, folder2)
        print(f"Copied {file_name} from f1 to f2.")
    else:
        print(f"{file_name} already exists in f2.")








import os

folder_path = "/path/to/your/folder"
files = os.listdir(folder_path)

if len(files) == 1:
    old_file_name = files[0]
    date_part = old_file_name[:14]  # Extract the first 14 characters for the datetime part
    new_file_name = f"{date_part}_SOD"
    os.rename(os.path.join(folder_path, old_file_name), os.path.join(folder_path, new_file_name))
elif len(files) == 2:
    for file_name in files:
        if "SOD" not in file_name:
            old_file_name = file_name
            date_part = old_file_name[:14]  # Extract the first 14 characters for the datetime part
            new_file_name = f"{date_part}_MOD"
            os.rename(os.path.join(folder_path, old_file_name), os.path.join(folder_path, new_file_name))
            break
elif len(files) == 3:
    suffix = None
    for file_name in files:
        if "SOD" not in file_name and "MOD" not in file_name:
            old_file_name = file_name
            date_part = old_file_name[:14]  # Extract the first 14 characters for the datetime part
            new_file_name = f"{date_part}_EOD"
            os.rename(os.path.join(folder_path, old_file_name), os.path.join(folder_path, new_file_name))
            break


print("File check and copy operation completed.")

